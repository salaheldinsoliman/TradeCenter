{"version":3,"sources":["components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","target","rel","id","this","props","account","Component","Main","_React$createElement","_this","onSubmit","event","preventDefault","name","campaignName","value","description","campaignDesc","donUnit","window","web3","utils","toWei","toString","console","log","goal","campaignGoal","AddCampaign","type","ref","input","placeholder","required","Object","defineProperty","scope","Campaigns","map","campaign","key","state","fromWei","RaisedAmt","owner","onClick","Donate","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","campaignCount","loading","bind","assertThisInitialized","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","Charity","networks","charity","Contract","abi","address","methods","i","concat","toConsumableArray","_this2","send","from","once","receipt","catch","e","amount","_this3","components_Navbar","role","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f64edd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-light fixed-top bg-light flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          ./. Charity Collection Platform .\\.\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div id=\"content\">\n        <h1>Add Campaign</h1>\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          const name = this.campaignName.value\n          const description = this.campaignDesc.value\n          const donUnit = window.web3.utils.toWei(this.donUnit.value.toString(), 'Ether')\n          console.log(\"amount is: \"+donUnit)\n          const goal = window.web3.utils.toWei(this.campaignGoal.value.toString(), 'Ether')\n          this.props.AddCampaign(name, description, goal, donUnit)\n        }}>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"campaignName\"\n              type=\"text\"\n              ref={(input) => { this.campaignName = input }}\n              className=\"form-control\"\n              placeholder=\"Campaign Name\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"campaignDesc\"\n              type=\"text\"\n              ref={(input) => { this.campaignDesc = input }}\n              className=\"form-control\"\n              placeholder=\"Campaign Description\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"campaignGoal\"\n              type=\"text\"donUnit\n              ref={(input) => { this.campaignGoal = input }}\n              className=\"form-control\"\n              placeholder=\"Goal\"\n              required />\n          </div> \n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"donUnit\"\n              type=\"text\"id\n              ref={(input) => { this.donUnit = input }}\n              className=\"form-control\"\n              placeholder=\"Donation Unit\"\n              required />\n          </div>          \n          <button type=\"submit\" className=\"btn btn-primary\">Add Campaign</button>\n        </form>\n        <p>&nbsp;</p>\n        <h2>Donate Now ^.^</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Description</th>{(input) => { this.campaignName = input }}\n              <th scope=\"col\">Raised Amount</th>\n              <th scope=\"col\">Goal</th>\n              <th scope=\"col\">Donation Unit</th>\n              <th scope=\"col\">State</th>\n              <th scope=\"col\">Raiser</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody id=\"campaignList\">\n            { this.props.Campaigns.map((campaign, key) => {\n              console.log(campaign)\n              console.log(\"DA ELLY GWA EL STATEE: \",campaign.state)\n              return(\n                <tr key={key}>\n                  <th scope=\"row\">{campaign.id.toString()}</th>\n                  <td>{campaign.name}</td>\n                  <td>{campaign.description}</td>\n                  <td>{window.web3.utils.fromWei(campaign.RaisedAmt.toString(), 'Ether')} Eth</td>\n                  <td>{window.web3.utils.fromWei(campaign.goal.toString(), 'Ether')} Eth</td>\n                  <td>{window.web3.utils.fromWei(campaign.donUnit.toString(), 'Ether')} Eth</td>\n                  <td>{campaign.state ===0?\"closed\": \"open\"}</td>\n                  <td>{campaign.owner}</td>\n                  <td>\n                  { !campaign.state===0\n                    ?<button\n                          name={campaign.id}\n                          value={campaign.donUnit} //={(input) => { this.donUnit = input }}\n                          onClick={(event) => {\n                            //this.props.purchaseProduct(event.target.name, event.target.value)\n                            this.props.Donate(event.target.name, event.target.value)\n\n                          }}\n                        >\n                          Donate\n                        </button>                    \n                    : null}\n                    </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport Charity from '../abis/Charity.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Charity.networks[networkId]\n    if(networkData) {\n      const charity= web3.eth.Contract(Charity.abi, networkData.address)\n      this.setState({ charity })\n      const campaignCount = await charity.methods.campaignCount().call()\n       this.setState({campaignCount})\n      // Load Campaigns\n\n      for (var i = 1; i <= campaignCount; i++) {\n        const campaign = await charity.methods.Campaigns(i).call()\n        this.setState({\n          Campaigns: [...this.state.Campaigns, campaign]\n        })\n      }\n\n      this.setState({ loading: false})\n    } else {\n      window.alert('Charity contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props)    \n    this.state = {\n      account: '',\n      campaignCount: 0,\n      Campaigns: [],\n      loading: true\n    }\n    //tbk\n    this.AddCampaign = this.AddCampaign.bind(this)\n    this.Donate = this.Donate.bind(this)\n\n  }\n\n  AddCampaign(name, description, goal, donUnit){\n    this.setState({loading: true})\n    this.state.charity.methods.AddCampaign(name,description,goal,donUnit).send({from: this.state.account})\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    }).catch(e=>{\n      console.log(e)\n    })\n}\n\n\nDonate(id, amount){\n  this.setState({loading: true})\n  this.state.charity.methods.Donate(id).send({from: this.state.account, value:amount})\n  .once('receipt', (receipt) => {\n    this.setState({ loading: false })\n  })\n}\n\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              { this.state.loading\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n                : <Main\n                  Campaigns={this.state.Campaigns}\n                  AddCampaign= {this.AddCampaign}\n                  Donate={this.Donate} />\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}